{"version":3,"sources":["components/sidebar/sidebar.js","components/editor/editor.js","components/app/app.js","index.js"],"names":["Sidebar","folders","setActiveFile","elements","map","folder","id","title","TreeItem","sx","p","nodeId","label","onClick","CssBaseline","component","width","sm","flexShrink","Drawer","variant","display","xs","boxSizing","open","ml","mt","Typography","fontWeight","TreeView","defaultCollapseIcon","defaultExpandIcon","multiSelect","overflowY","my","Button","Editor","activeFile","onUpdateNote","data","text","tiptap","useEditor","extensions","StarterKit","Placeholder","content","on","getHTML","check","className","html","onChange","e","target","value","editor","useEffect","commands","setContent","Box","py","px","App","useState","setFolder","find","updatedNote","updatedFoldersArr","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3ef8d952.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport { Drawer, Box, CssBaseline, Typography, Button } from '@mui/material';\r\nimport TreeView from '@mui/lab/TreeView';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\nimport TreeItem from '@mui/lab/TreeItem';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst Sidebar = ({ folders, setActiveFile }) => {\r\n\r\n    const createFolder = () => {\r\n\r\n    }\r\n\r\n    const elements = folders.map(folder => {\r\n        const { id, title } = folder;\r\n        return (\r\n            <TreeItem sx={{ p: 0.5 }} nodeId={`${id}`} label={title} onClick={() => setActiveFile(id)} />\r\n        )\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <Box\r\n                component=\"nav\"\r\n                sx={{ width: { sm: drawerWidth }, flexShrink: { sm: 0 } }}\r\n                aria-label=\"mailbox folders\"\r\n            >\r\n                <Drawer\r\n                    variant=\"permanent\"\r\n                    sx={{\r\n                        display: { xs: 'none', sm: 'block' },\r\n                        '& .MuiDrawer-paper': { boxSizing: 'border-box', width: drawerWidth },\r\n                    }}\r\n                    open\r\n                >\r\n                    <Box sx={{ ml: 2, mt: 5 }}>\r\n                        <Typography sx={{ fontWeight: 'bold' }} variant='h5'>routini</Typography>\r\n                        <TreeView\r\n                            aria-label=\"multi-select\"\r\n                            defaultCollapseIcon={<ExpandMoreIcon />}\r\n                            defaultExpandIcon={<ChevronRightIcon />}\r\n                            multiSelect\r\n                            sx={{ overflowY: 'auto', my: 3 }}\r\n                        >\r\n                            <TreeItem nodeId=\"1\" label=\"–ó–∞–º—ñ—Ç–∫–∏\">\r\n                                {elements}\r\n                            </TreeItem>\r\n                        </TreeView>\r\n                        <Button variant='outlined' onClick={createFolder} >–î–æ–¥–∞—Ç–∏ –ø–∞–ø–∫—É</Button>\r\n                    </Box>\r\n                </Drawer>\r\n            </Box>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Sidebar;","import React, { useEffect } from 'react';\r\nimport { Box } from '@mui/system';\r\nimport { useEditor, EditorContent } from '@tiptap/react';\r\nimport { Node } from \"@tiptap/core\";\r\nimport StarterKit from '@tiptap/starter-kit';\r\nimport Placeholder from '@tiptap/extension-placeholder';\r\nimport ContentEditable from 'react-contenteditable';\r\n\r\nimport './editor.css';\r\n\r\n\r\nconst Editor = ({ activeFile, onUpdateNote }) => {\r\n    const data = activeFile.text;\r\n\r\n    const tiptap = useEditor({\r\n        extensions: [\r\n            StarterKit,\r\n            Placeholder,\r\n        ],\r\n        content: data,\r\n    });\r\n\r\n    if (activeFile) {\r\n        tiptap.on('blur', () => onUpdateNote({\r\n            ...activeFile,\r\n            text: tiptap.getHTML(),\r\n        }))\r\n    };\r\n\r\n    const check = activeFile ? (<><ContentEditable className='ProseMirror Title' html={activeFile.title} onChange={(e) =>onUpdateNote({\r\n        ...activeFile,\r\n        title: e.target.value\r\n    })} /><EditorContent editor={tiptap} /></>) : (<h2>–ù–µ–º–∞—î –≤—ñ–¥–∫—Ä–∏—Ç–∏—Ö —Ñ–∞–π–ª—ñ–≤</h2>);\r\n\r\n    useEffect(() => {\r\n        if (activeFile) {\r\n            try {\r\n                tiptap.commands.setContent(data);\r\n            } catch (e) {\r\n                return;\r\n            }\r\n        }\r\n    }, [activeFile]);\r\n\r\n    return (\r\n        <>\r\n            <Box sx={{ py: 12, px: 8, width: '100%' }} className='editarea'>\r\n                {check}\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Editor;","import React, { useState } from 'react';\r\nimport { Box } from '@mui/system';\r\n\r\n\r\nimport Sidebar from '../sidebar/sidebar';\r\nimport Editor from '../editor/editor';\r\n\r\nconst App = () => {\r\n    const [folders, setFolder] = useState([{ id: 2, title: '–®–∫–æ–ª–∞', text: '<p>Hello World! üåéÔ∏è</p>' }, { id: 3, title: '–õ—ñ—Ç–µ—Ä–∞—Ç—É—Ä–∞', text: '<h3>Literature!</h3>' }]);\r\n    const [activeFile, setActiveFile] = useState(1);\r\n    \r\n\r\n    const getActiveFile = () => {\r\n        // console.log(folders.find(folder => folder.id === activeFolder));\r\n        if(folders.find(folder => folder.id === activeFile)) {\r\n            return folders.find(folder => folder.id === activeFile)\r\n        }   else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const onUpdateNote = (updatedNote) => {\r\n        const updatedFoldersArr = folders.map(folder => {\r\n            if(folder.id === updatedNote.id) {\r\n                return updatedNote;\r\n            }\r\n            return folder;\r\n        });\r\n        setFolder(updatedFoldersArr);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Box sx={{ display: 'flex' }}>\r\n                <Sidebar folders={folders} setActiveFile={setActiveFile} />\r\n                <Editor activeFile={getActiveFile()} onUpdateNote={onUpdateNote} />\r\n            </Box>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app/app'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}